# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qfUddXtIN67f1YQ5RsumLYPM26MWaRjh
"""

name1 = 'sid'
name2 = "sid"
name3 = '''sid'''
print(name1, name2, name3)

a = 25
b = 383
sum = a + b
# The built-in 'print' function was overwritten. Use 'del print' to restore it.
del print
print(sum)

a = 25
b = 383
differ = a - b
# The built-in 'print' function was overwritten. Use 'del print' to restore it.

print(differ)

a = 25
b = 383
divide = a/b
# The built-in 'print' function was overwritten. Use 'del print' to restore it.

print(divide)

a = 25
b = 383
mult = a * b
# The built-in 'print' function was overwritten. Use 'del print' to restore it.

print(mult)

a = 2555
b = 383
remainder = a % b
# The built-in 'print' function was overwritten. Use 'del print' to restore it.

print(remainder)

a = 25
b = 3
power = a ** b
# The built-in 'print' function was overwritten. Use 'del print' to restore it.

print(power)

"""relational

"""

a = 25
b = 383
print(a == b)

a = 25
b = 383
print(a != b)

a = 25
b = 383
print(a > b)

a = 25
b = 383
print(a < b)

a = 25
b = 383
print(a >= b)

a = 25
b = 383
print(a <= b)

"""assignment"""

#euals to
num1 =10
num2 =30

# "+=" assignment operator
num = 10
# num = num + 10 (gives output 20, general method)
#now with += assignment opeator
num += 10
print(num)

# "-=" assignment operator
num = 10
# num = num - 10 (gives output 0, general method)
#now with -= assignment opeator
num -= 10
print(num)

# "*=" assignment operator
num = 10
# num = num * 10 (gives output 100, general method)
#now with *= assignment opeator
num *= 10
print(num)

# "/=" assignment operator
num = 10
# num = num / 10 (gives output 1.0 general method)
#now with /= assignment opeator
num /= 10
print(num)

# "%=" assignment operator
num = 10
# num = num % 10 (gives output 0 general method)
#now with %= assignment opeator
num %= 10
print(num)

# "**=" assignment operator
num = 10
# num = num ** 2 (gives output 100 general method)
#now with **= assignment opeator
num **= 2
print(num)

"""logical"""

a = 50
b = 20
print(not a > b)

# not
print(not True)
print(not False)

# and
val1 = True
val2 = True
val3 = False
print(val1 and val2)
print(val1 and val3)

# OR
val1 = True
val2 = False
val3 = True
val4 = False
print(val1 or val2)
print(val2 or val4)
print(val1 and val2)
print(val1 and val3)

a = 50
b = 20
print(a == b or a > b)

"""type conversion"""

a = 2
b = 2.5
sum = a + b
print(sum)

"""type casting"""

a = "2"
b = 2.5
sum = a + b
print(sum)

# now we perform type casting
a = "2"
b = 2.5
c =int(a)
sum = c + b
print(sum)

"""Input taking"""

input("enter your name")

name = input("enter your name")
print("Welcome", name)

"""Write a Program to input 2 numbers & print their sum."""

num1 = input("enter first number")
num2 = input("enter second number")
sum = num1 + num2
print("sum of entered two numbers is :", sum)

"""WAP to input side of a square & print its area."""

# area of a square side*side

side = int(input("enter side of a square"))
area = side * side
print("area of a square is :", area)

"""WAP to input 2 floating point numbers & print their average."""

num1 = float(input("enter first number"))
num2 = float(input("enter second number"))
avg = (num1 + num2)/2
print("average of entered two numbers is :", avg)

"""WAP to input 2 int numbers, a and b.
Print True if a is greater than or equal to b. If not print False.
"""

num1 = int(input("enter first number"))
num2 = int(input("enter second number"))
print(num1 >= num2)